{"version":3,"sources":["assets/images/top-tracks.jpg","assets/images/bb-placeholder.jpg","concepts/app.js","config/index.js","env.js","services/query-parametrize.js","services/auth.js","services/history.js","concepts/auth.js","services/axios.js","services/api.js","concepts/route.js","concepts/user.js","concepts/play-history.js","services/mongodb.js","concepts/top-history.js","concepts/playlist-popup.js","concepts/playlist.js","concepts/calendar.js","concepts/app-view.js","components/Modal/index.jsx","containers/PlaylistPopup/index.jsx","services/change-theme.js","components/ListPage/index.jsx","components/ListItemCoverImage/index.jsx","components/TopHistoryTrack/index.js","components/ListActionPanel/index.jsx","components/Calendar/Calendar.js","constants/ThemeColors.js","components/TopHistory/index.jsx","components/ScrollTopRoute/index.jsx","components/AppNavigation/index.jsx","components/AppHelp/index.jsx","containers/AppView/index.js","containers/LoginView/index.js","components/AppInfo/index.jsx","containers/Callback/index.js","containers/App/index.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","initialState","fromJS","reducer","state","arguments","length","undefined","type","config","API_URL","REALM_APP_ID","SPOTIFY_AUTHORIZE_URL","SPOTIFY_AUTH_SCOPES","SPOTIFY_CLIENT_ID","CALLBACK_URL","concat","window","location","origin","queryParametrize","url","query","queryParametrizedUrl","isObject","isEmpty","Object","keys","map","k","encodeURIComponent","join","parseAccessToken","urlParts","href","split","last","history","createHistory","basename","SET_USER_LOGGED_IN","authorizeUser","dispatch","loginOpts","client_id","redirect_uri","scope","response_type","loginUrl","isLoggedIn","set","client","axios","create","baseURL","responseType","headers","Accept","Content-Type","axiosApiMiddleware","axiosMiddleware","getErrorActionType","action","options","types","_ref","_ref$errorSuffix","errorSuffix","_ref$successSuffix","successSuffix","Error","getActionTypes","getAccessToken","localStorage","get","redirectToLogin","getState","accessToken","pathName","getCurrentPathName","isNil","replace","handleApiError","response","status","error","next","isUnauthorized","errorObject","text","message","code","nextAction","payload","apiCall","endpoint","_ref$method","method","opts","objectWithoutProperties","authHeader","token","Authorization","getAuthHeader","objectSpread","request","onError","FETCH_USER_PROFILE_SUCCESS","getUser","user","isLoadingUser","data","FETCH_PLAY_HISTORY_SUCCESS","getPlayHistory","playHistory","getFirstImage","createSelector","tracks","track","getIn","target","isLoadingHistory","items","appConfig","id","timeout","app","Realm","loginAnonymous","asyncToGenerator","regenerator_default","a","mark","_callee","assert","credentials","wrap","_context","prev","require","anonymous","logIn","sent","currentUser","abrupt","t0","console","stop","apply","this","getRanking","_ref2","_callee2","rankingCollection","date","rankingQueryFilter","rankingQueryOptions","rankingDocument","_context2","_id","projection","findOne","ranking","_x","_x2","getTrackInfo","_ref3","_callee3","trackInfoCollection","item","trackInfoQueryFilter","trackInfoQueryOptions","_context3","uri","trackName","title","trackArtist","artist","track_info","artist_info","genres","_x3","_x4","getTop50","_ref4","_callee4","mongo","trackInfo","_context4","log","mongoClient","db","collection","Promise","all","_x5","CLEAR_TOP_50","FETCH_TOP_50_SUCCESS","SET_DATE","getTopTracks","topHistory","getDate","getTopHistory","getTopTracksUris","getFirstTrackImage","fetchTop","then","isLoading","Map","OPEN_PLAYLIST_POPUP","CLOSE_PLAYLIST_POPUP","SET_PLAYLIST_IMAGES","getPlaylistPopupUri","playlistPopup","getPlaylistPopupVisibility","getPlaylistImage","imageList","size","getPopupData","createStructuredSelector","playlistUri","playlistImage","isVisible","playlistImages","CREATE_PLAYLIST","CREATE_PLAYLIST_SUCCESS","fetchNewPlaylistImage","playlistId","userId","fetchPlaylistImages","isCreatingPlaylist","addDays","days","newDate","Date","setDate","getAppViewData","createTracksPlaylist","nonNullTracks","filter","params","createPlaylist","name","playlist","uris","addTracksToPlayList","toJS","Modal","children","react_default","createElement","className","defaultProps","PlaylistPopup","_this$props","props","components_Modal","src","alt","width","height","xmlns","r","cy","cx","fill","onClick","closePlaylistPopup","Component","mapStateToProps","mapDispatchToProps","connect","changeThemeColor","color","themeMetaTag","document","querySelector","content","ListPage","themeColor","headerImageSrc","style","backgroundImage","ListItemCoverImage","nullImg","TopHistoryTrack","orderNumber","components_ListItemCoverImage","slice","scrollTarget","Header","_this","classCallCheck","_super","call","isOnTop","scrollWatcher","bind","assertThisInitialized","addEventListener","removeEventListener","scrollPosition","pageYOffset","setState","description","onActionClick","classnames","action-buttons--scrolled","Calendar","onSelection","_useState","useState","moment","toDate","_useState2","slicedToArray","currentDate","setCurrentDate","react_datepicker_min_default","selected","onChange","minDate","maxDate","ThemeColors","trackImg","TopHistory","updateCurrentDate","components_ListPage","Calendar_Calendar","index","components_TopHistoryTrack","key","components_ListActionPanel","ScrollTopRoute","prevProps","pathname","scrollTo","Route","withRouter","components_AppNavigation","NavLink","activeClassName","to","class","Apphelp","rel","AppView","startAppView","updateDate","match","containers_PlaylistPopup","exact","path","render","Redirect","components_ScrollTopRoute","components_TopHistory","component","AppHelp","changeDate","format","substring","dateString","getDay","adjustDate","LoginView","Link","AppInfo","scopes","aria-label","role","Callback","saveLogin","redirectTo","remove","historyMiddleware","routerMiddleware","middlewares","thunk","store","applyMiddleware","createStore","createStoreWithMiddleware","combineReducers","reducers","routing","routerReducer","__REDUX_DEVTOOLS_EXTENSION__","App","es","react_router_redux_es","Switch","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","containers_App","getElementById","URL","process","fetch","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,sOCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sqBCYlCC,EAAeC,iBAAO,IAEb,SAASC,IAAsC,IAA9BC,EAA8BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBJ,EAGlC,OAHwDI,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GAC7CC,KAEJJ,uBCNEK,EARA,CACbC,QAAS,6BACTC,aAAc,qBACdC,sBAAuB,yCACvBC,oBAAqB,yBACrBC,kBCPqB,mCDQrBC,aAAY,GAAAC,OAAKC,OAAOC,SAASC,OAArB,mCESCC,EAhBU,SAACC,EAAKC,GAC7B,IAAIC,EAAuBF,EAY3B,OAVIG,mBAASF,KAAWG,kBAAQH,KAC9BC,GACE,IACAG,OAAOC,KAAKL,GACTM,IAAI,SAAAC,GACH,OAAOC,mBAAmBD,GAAK,IAAMC,mBAAmBR,EAAMO,MAE/DE,KAAK,MAGLR,GCNMS,EAPiB,WAC9B,IACMC,EADMhB,OAAOC,SAASgB,KACPC,MAAM,kBAE3B,OAAOC,eAAKH,aCFCI,QAFCC,GAAc,CAAEC,SAAU,kBCSpCC,EAAqB,0BAKdC,EAAgB,kBAAM,SAAAC,GACjC,IAAMC,EAAY,CAChBC,UAAWnC,EAAOK,kBAClB+B,aAAcpC,EAAOM,aACrB+B,MAAOrC,EAAOI,oBACdkC,cAAe,SAEXC,EAAW5B,EAAiBX,EAAOG,sBAAuB+B,GAEhE1B,OAAOC,SAASgB,KAAOc,IAsCnB/C,EAAeC,iBAAO,CAC1B+C,YAAY,IAGC,SAAS9C,IAAsC,IAA9BC,EAA8BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBJ,EACtC,QAD4DI,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GAC7CC,MACb,KAAKgC,EACH,OAAOpC,EAAM8C,IAAI,cAAc,GAGjC,QACE,OAAO9C,0CCrEA+C,SAASC,EAAMC,OAAO,CACjCC,QAAS7C,EAAOC,QAChB6C,aAAc,OACdC,QAAS,CACPC,OAAQ,mBACRC,eAAgB,sBAIPC,EAAqBC,IAAgBT,GAmBrCU,EAAqB,SAACC,EAAQC,GAAT,OAAqB3B,eAjBzB,SAC5B0B,GAEG,IACCE,EADDC,EAAA5D,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADqD,GACrD6D,EAAAD,EADDE,mBACC,IAAAD,EADa,QACbA,EAAAE,EAAAH,EADsBI,qBACtB,IAAAD,EADsC,WACtCA,EAEH,GAA2B,qBAAhBN,EAAOtD,KAAsB,KAC9BA,EAASsD,EAATtD,KACRwD,EAAQ,CAACxD,EAAD,GAAAQ,OAAUR,GAAVQ,OAAiBqD,GAAjB,GAAArD,OAAqCR,GAArCQ,OAA4CmD,QAC/C,IAA4B,qBAAjBL,EAAOE,MAIvB,MAAM,IAAIM,MAAM,gEAFhBN,EAD0BF,EAAlBE,MAKV,OAAOA,EAGmDO,CAAeT,EAAQC,KCzB7ES,EAAiB,kBAAMC,IAAaC,IAAI,gBAKxCC,EAAkB,kBAAM,SAACjC,EAAUkC,GACvC,IAAMC,EAAcL,IAEdM,ECb0B,SAAA1E,GAAK,OAAIsE,cAAItE,EAAO,CAAC,UAAW,WAAY,aDa3D2E,CADHH,KASd,GAJAH,IAAavB,IAAI,aAAc4B,IAI1BE,gBAAMH,GACT,OAAOnC,EAASD,KAIlBJ,EAAQ4C,QAAQ,YAIZC,EAAiB,SAAAC,GACrB,IAAMC,EAASV,cAAIS,EAAU,yBACrBE,EAA2CF,EAA3CE,MAAOvB,EAAoCqB,EAApCrB,OAAQwB,EAA4BH,EAA5BG,KAAMvB,EAAsBoB,EAAtBpB,QAASrB,EAAayC,EAAbzC,SAGtC,GA1BqB,SAAA0C,GAAM,OAAe,MAAXA,EA0B3BG,CAAeH,GACjB,OAAO1C,EAASiC,KAGlB,IAAMa,EAAc,CAClBC,KAAMf,cAAIW,EAAO,sBAAuBA,EAAMK,SAC9CC,KAAMjB,cAAIW,EAAO,oBAGbO,EAAa,CACjBpF,KAAMqD,EAAmBC,EAAQC,GACjCsB,MAAOG,EACPK,QAASnB,cAAIZ,EAAQ,YAIvB,OADAwB,EAAKM,GACEA,GAGIE,EAAU,SAAA7B,GAAA,IACrB8B,EADqB9B,EACrB8B,SACAvF,EAFqByD,EAErBzD,KACAwD,EAHqBC,EAGrBD,MACA6B,EAJqB5B,EAIrB4B,QAJqBG,EAAA/B,EAKrBgC,cALqB,IAAAD,EAKZ,MALYA,EAMlBE,EANkBxE,OAAAyE,EAAA,EAAAzE,CAAAuC,EAAA,uDAOjB,SAAAvB,GAEJ,IACM0D,EAzDc,SAAAC,GAAK,OAAMA,EAAQ,CAACC,cAAa,UAAAtF,OAAYqF,IAAW,GAyDzDE,CADL/B,KAGd,OAAO9B,EAAS,CACdlC,OACAwD,QACA6B,QAAQnE,OAAA8E,EAAA,EAAA9E,CAAA,GACHmE,EADE,CAELY,QAAQ/E,OAAA8E,EAAA,EAAA9E,CAAA,CACNL,IAAK0E,EACLE,SACAzC,QAAQ9B,OAAA8E,EAAA,EAAA9E,CAAA,GACH0E,IAEFF,GAELnC,QAAS,CACP2C,QAASxB,SE5EXyB,EAA6B,kCAItBC,EAAU,SAAAxG,GAAK,OAAIA,EAAMyG,KAAKnC,IAAI,SAWzCzE,EAAeC,iBAAO,CAC1B2G,KAAM,GACNC,eAAe,IAGF,SAAS3G,IAAsC,IAA9BC,EAA8BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBJ,EAAc6D,EAAQzD,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC5D,OAAQuD,EAAOtD,MACb,KAAKmG,EACH,OAAOvG,EAAM8C,IAAI,OAAQhD,iBAAO4D,EAAO+B,QAAQkB,OAGjD,QACE,OAAO3G,eCrBP4G,EAA6B,qCAItBC,EAAiB,SAAA7G,GAAK,OAAIA,EAAM8G,YAAYxC,IAAI,YAMvDyC,GAJ+BC,yBAAeH,EAAgB,SAAAI,GAAM,OACxEA,EAAOzF,IAAI,SAAA0F,GAAK,OAAIA,EAAMC,MAAM,CAAC,QAAS,YAGtB,SAAAC,GAAM,OAAIA,EAAOD,MAAM,CAAC,QAAS,QAAS,SAAU,EAAG,UAmBvEtH,IAlB8BmH,yBAAeH,EAAgB,SAAAC,GAAW,OAC5EA,EAAYtF,IAAIuF,KAiBGjH,iBAAO,CAC1BmC,QAAS,GACToF,kBAAkB,KAGL,SAAStH,KAAsC,IAA9BC,EAA8BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBJ,GAAc6D,EAAQzD,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC5D,OAAQuD,EAAOtD,MACb,KAAKwG,EACH,OAAO5G,EAAM8C,IAAI,UAAWhD,iBAAO4D,EAAO+B,QAAQkB,KAAKW,QAGzD,QACE,OAAOtH,2CCjDPuH,GAAY,CAChBC,GAAInH,EAAOE,aACXkH,QAAS,KAELC,GAAM,IAAIC,KAAUJ,IAGpBK,GAAc,eAAA/D,EAAAvC,OAAAuG,GAAA,EAAAvG,CAAAwG,GAAAC,EAAAC,KAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA1B,EAAA,OAAAqB,GAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAnD,MAAA,cACjBgD,EAASK,EAAQ,KAEfJ,EAAcR,KAAkBa,YAHjBH,EAAAC,KAAA,EAAAD,EAAAnD,KAAA,EAMAwC,GAAIe,MAAMN,GANV,cAMb1B,EANa4B,EAAAK,KASnBR,EAAOzB,EAAKe,KAAOE,GAAIiB,YAAYnB,IAThBa,EAAAO,OAAA,SAUZnC,GAVY,QAAA4B,EAAAC,KAAA,GAAAD,EAAAQ,GAAAR,EAAA,SAYnBS,QAAQ7D,MAAM,mBAAdoD,EAAAQ,IAZmB,yBAAAR,EAAAU,SAAAd,EAAA,kBAAH,yBAAApE,EAAAmF,MAAAC,KAAAhJ,YAAA,GAgBdiJ,GAAU,eAAAC,EAAA7H,OAAAuG,GAAA,EAAAvG,CAAAwG,GAAAC,EAAAC,KAAG,SAAAoB,EAAOC,EAAmBC,GAA1B,IAAAC,EAAAC,EAAAC,EAAA,OAAA3B,GAAAC,EAAAK,KAAA,SAAAsB,GAAA,cAAAA,EAAApB,KAAAoB,EAAAxE,MAAA,cAAAwE,EAAApB,KAAA,EAETiB,EAAqB,CAACI,IAAKL,GAC3BE,EAAsB,CAACI,WAAc,CAACD,IAAK,IAHlCD,EAAAxE,KAAA,EAIemE,EAAkBQ,QAAQN,EAAoBC,GAJ7D,cAITC,EAJSC,EAAAhB,KAAAgB,EAAAd,OAAA,SAKRa,EAAgBK,SALR,cAAAJ,EAAApB,KAAA,EAAAoB,EAAAb,GAAAa,EAAA,SAOfZ,QAAQ7D,MAAR,4BAAArE,OAA0C0I,GAA1CI,EAAAb,IAPea,EAAAd,OAAA,SAQR,MARQ,yBAAAc,EAAAX,SAAAK,EAAA,iBAAH,gBAAAW,EAAAC,GAAA,OAAAb,EAAAH,MAAAC,KAAAhJ,YAAA,GAYVgK,GAAY,eAAAC,EAAA5I,OAAAuG,GAAA,EAAAvG,CAAAwG,GAAAC,EAAAC,KAAG,SAAAmC,EAAOC,EAAqBC,GAA5B,IAAAC,EAAAC,EAAA,OAAAzC,GAAAC,EAAAK,KAAA,SAAAoC,GAAA,cAAAA,EAAAlC,KAAAkC,EAAAtF,MAAA,UACdmF,EAAKI,IADS,CAAAD,EAAAtF,KAAA,eAAAsF,EAAA5B,OAAA,SAEV,CAAC8B,UAAaL,EAAKM,MAClBC,YAAeP,EAAKQ,OACpBC,WAAc,CAACL,IAAO,MACtBM,YAAe,CAACC,OAAU,SALjB,cAAAR,EAAAlC,KAAA,EAQbgC,EAAuB,CAACX,IAAKU,EAAKI,KAClCF,EAAwB,CAACX,WAAc,CAACD,IAAK,IAThCa,EAAA5B,OAAA,SAUZwB,EAAoBP,QAAQS,EAAsBC,IAVtC,cAAAC,EAAAlC,KAAA,EAAAkC,EAAA3B,GAAA2B,EAAA,SAYjB1B,QAAQ7D,MAAR,+BAAArE,OAA6CyJ,EAAKI,KAAlDD,EAAA3B,IAZiB2B,EAAA5B,OAAA,SAaV,MAbU,yBAAA4B,EAAAzB,SAAAoB,EAAA,iBAAH,gBAAAc,EAAAC,GAAA,OAAAhB,EAAAlB,MAAAC,KAAAhJ,YAAA,GAkBLkL,GAAQ,eAAAC,EAAA9J,OAAAuG,GAAA,EAAAvG,CAAAwG,GAAAC,EAAAC,KAAG,SAAAqD,EAAO/B,GAAP,IAAA7C,EAAA6E,EAAAjC,EAAAe,EAAAN,EAAAyB,EAAA,OAAAzD,GAAAC,EAAAK,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAtG,MAAA,cAAAsG,EAAAlD,KAAA,EAAAkD,EAAAtG,KAAA,EAED0C,KAFC,cAEdnB,EAFc+E,EAAA9C,KAGpBI,QAAQ2C,IAAI,2BACNH,EAAQ7E,EAAKiF,YAAY,iBACzBrC,EAAoBiC,EAAMK,GAAG,QAAQC,WAAW,sBAChDxB,EAAsBkB,EAAMK,GAAG,QAAQC,WAAW,gBANpCJ,EAAAtG,KAAA,GAOEgE,GAAWG,EAAmBC,GAPhC,eAOdQ,EAPc0B,EAAA9C,KAAA8C,EAAAtG,KAAA,GAQI2G,QAAQC,IAAIhC,EAAQtI,IAAI,SAAA6I,GAAI,OAAIJ,GAAaG,EAAqBC,MARtE,eAQdkB,EARcC,EAAA9C,KAAA8C,EAAA5C,OAAA,SASb2C,GATa,QAAAC,EAAAlD,KAAA,GAAAkD,EAAA3C,GAAA2C,EAAA,SAWpB1C,QAAQ7D,MAAR,2BAAArE,OAAyC0I,GAAzCkC,EAAA3C,IAXoB,yBAAA2C,EAAAzC,SAAAsC,EAAA,kBAAH,gBAAAU,GAAA,OAAAX,EAAApC,MAAAC,KAAAhJ,YAAA,GClDf+L,GAAe,uBACfC,GAAuB,+BAEvBC,GAAW,mBAGJC,GAAe,SAAAnM,GAAK,OAAIA,EAAMoM,WAAW9H,IAAI,WAC7C+H,GAAU,SAAArM,GAAK,OAAIA,EAAMoM,WAAW9H,IAAI,SAExCgI,GAAgBtF,yBAAemF,GAAc,SAAAlF,GAAM,OAC9DnH,iBAAO,CAACmH,aAGGsF,GAAmBvF,yBAAemF,GAAc,SAAAlF,GAAM,OACjEA,EAAOzF,IAAI,SAAA0F,GAAK,OAAIA,EAAMC,MAAM,CAAC,aAAc,YAG3CqF,GAAqB,SAAApF,GAAM,OAAIA,EAAOD,MAAM,CAAC,aAAc,QAAS,SAAU,EAAG,SAO1EsF,IALiBzF,yBAAemF,GAAc,SAAAlF,GAAM,OAC/DA,EAAOzF,IAAIgL,MAIW,kBAAM,SAAClK,EAAUkC,GACvC,IAAM8E,EAAO+C,GAAQ7H,KACrB2G,GAAS7B,GAAMoD,KAAK,SAACpF,GACnBhF,EAAS,CAAClC,KAAM4L,KAChB1J,EACE,CAAClC,KAAM6L,GACPxG,QAAS6B,SAaTzH,GAAeC,iBAAO,CAC1BmH,OAAQ,GACRqC,KAAM,aACNqD,WAAW,IAGE,SAAS5M,KAAsC,IAA9BC,EAA8BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBJ,GAAc6D,EAAQzD,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC5D,OAAQuD,EAAOtD,MACb,KAAK4L,GAEH,OAAOhM,EAAM8C,IAAI,SAAU8J,iBAG7B,KAAKX,GAEH,OAAOjM,EAAM8C,IAAI,SAAUhD,iBAAO4D,EAAO+B,UAG3C,KAAKyG,GAEH,OADApD,QAAQ2C,IAAI,iBAAkB/H,EAAO+B,SAC9BzF,EAAM8C,IAAI,OAAQY,EAAO+B,SAGlC,QACE,OAAOzF,GCrEb,IAAM6M,GAAsB,oCACtBC,GAAuB,qCACvBC,GAAsB,oCAGfC,GAAsB,SAAAhN,GAAK,OAAIA,EAAMiN,cAAc3I,IAAI,QACvD4I,GAA6BlG,yBAAegG,GAAqB,SAAAvC,GAAG,OAAK7F,gBAAM6F,KAG/E0C,GAAmBnG,yBADC,SAAAhH,GAAK,OAAIA,EAAMiN,cAAc3I,IAAI,mBACA,SAAA8I,GAChE,OAAKA,GAAgC,IAAnBA,EAAUC,KAKrBD,EAAUjG,MAAM,CAAC,EAAG,SAAWiG,EAAUjG,MAAM,CAAC,EAAG,QAJjD,OAOEmG,GAAeC,mCAAyB,CACnDC,YAAaR,GACbS,cAAeN,GACfO,UAAWR,KASPrN,GAAeC,iBAAO,CAC1B2K,IAAK,KACLkD,eAAgB,KAGH,SAAS5N,KAAsC,IAA9BC,EAA8BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBJ,GAAc6D,EAAQzD,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC5D,OAAQuD,EAAOtD,MACb,KAAKyM,GACH,OAAO7M,EAAM8C,IAAI,MAAOY,EAAO+B,SAGjC,KAAKqH,GACH,OAAO9M,EAAM8C,IAAI,MAAO,MAAMA,IAAI,iBAAkBhD,iBAAO,KAG7D,KAAKiN,GACH,OAAO/M,EAAM8C,IAAI,iBAAkBhD,iBAAO4D,EAAO+B,UAGnD,QACE,OAAOzF,GC7Cb,IAAM4N,GAAkB,2BAClBC,GAA0B,mCAgDnBC,GAAwB,SAAAC,GAAU,OAAI,SAAAzL,GAAQ,OACzDA,EAlBiC,SAAAyL,GAAU,OAAI,SAACzL,EAAUkC,GAC1D,IACMwJ,EADOxH,EAAQhC,KACDF,IAAI,MAExB,OAAK0J,EAIE1L,EACLoD,EAAQ,CACNtF,KAvCqB,8BAwCrBa,IAAG,UAAAL,OAAYoN,EAAZ,eAAApN,OAAgCmN,EAAhC,WACHlI,OAAQ,SAPH,MAaAoI,CAAoBF,IAAarB,KAAK,SAAAhJ,GAAM,OACnDpB,GD7B6B8K,EC6BF1J,EAAO+B,QAAQkB,KD7BC,CAAEvG,KAAM2M,GAAqBtH,QAAS2H,KAApD,IAAAA,MCmF3BvN,GAAeC,iBAAO,CAC1BoO,oBAAoB,IAGP,SAASnO,KAAsC,IAA9BC,EAA8BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBJ,GACtC,QAD4DI,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GAC7CC,MACb,KAAKwN,GACH,OAAO5N,EAAM8C,IAAI,sBAAsB,GAGzC,KAAK+K,GACH,OAAO7N,EAAM8C,IAAI,sBAAsB,GAGzC,QACE,OAAO9C,qCC9HAmO,GAAU,SAAC7E,EAAM8E,GAC5B,IAAIC,EAAU,IAAIC,KAAKhF,GAEvB,OADA+E,EAAQE,QAAQF,EAAQhC,UAAY+B,GAC7BC,GCYIG,GAAiBjB,mCAAyB,CACrD9G,KAAMD,EACN8C,KAAM+C,GACND,WAAYE,KAkBDmC,GF2C0B,kBAAM,SAACnM,EAAUkC,GACtD,IAAMxE,EAAQwE,IAERkK,EADSnC,GAAiBvM,GACH2O,OAAO,SAAAzH,GAAK,OAAa,MAATA,IACvCoC,EAAO+C,GAAQrM,GAErB,GAAK0O,EAAcrB,KAInB,OAAO/K,EAvEqB,eAACsM,EAAD3O,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAU,GAAV,OAAiB,SAACqC,EAAUkC,GACxDsE,QAAQ2C,IAAI,oBAAqBjH,KACjC,IAAMiC,EAAOD,EAAQhC,KACrBsE,QAAQ2C,IAAI,UAAWhF,GACvB,IAAMuH,EAASvH,EAAKnC,IAAI,MAExB,OAAK0J,EAIE1L,EACLoD,EAAQ,CACNtF,KAAMwN,GACN3M,IAAG,UAAAL,OAAYoN,EAAZ,cACHnI,OAAQ,OACRc,KAAMiI,KARD,MAiEPC,CAAe,CACbC,KAAI,mCAAAlO,OAAgC0I,MAEtCoD,KAAK,SAAA3H,GACL,IAAMgK,EAAWzK,cAAIS,EAAU,gBACzBgJ,EAAazJ,cAAIyK,EAAU,MAC3BvB,EAAclJ,cAAIyK,EAAU,OAElC,GAAInK,gBAAMmJ,KAAgBW,EAAcrB,KACtC,OAAO,KAGT/K,EA1C+B,SAACyL,EAAY9G,GAAb,OAAwB,SAAC3E,EAAUkC,GACpE,IACMwJ,EADOxH,EAAQhC,KACDF,IAAI,MAExB,OAAK0J,EAIE1L,EACLoD,EAAQ,CACNtF,KA3DyB,kCA4DzBa,IAAG,SAAAL,OAAWoN,EAAX,eAAApN,OAA+BmN,EAA/B,WACHlI,OAAQ,OACRc,KAAM,CAAEqI,KAAM/H,MART,MAqCEgI,CAAoBlB,EAAYW,EAAcQ,SAASxC,KAAK,WACnEpK,ED7EmC,CAAElC,KAAMyM,GAAqBpH,QC6ErC+H,IAC3BlL,EAASwL,GAAsBC,UGxG/BoB,WAAQ,SAAAtL,GAAA,IAAGuL,EAAHvL,EAAGuL,SAAH,OACZC,EAAAtH,EAAAuH,cAAA,OAAKC,UAAU,SACbF,EAAAtH,EAAAuH,cAAA,OAAKC,UAAU,kBAAkBH,MAQrCD,GAAMK,aAAe,CACnBJ,cAAUjP,GAGGgP,sdCZTM,iKACK,IAAAC,EAC2CzG,KAAK0G,MAA/CnC,EADDkC,EACClC,YAAaC,EADdiC,EACcjC,cAErB,OAHOiC,EAC6BhC,UAOlC2B,EAAAtH,EAAAuH,cAACM,GAAD,KACEP,EAAAtH,EAAAuH,cAAA,OAAKC,UAAU,kBACbF,EAAAtH,EAAAuH,cAAA,MAAIC,UAAU,yBAAd,WACAF,EAAAtH,EAAAuH,cAAA,KAAGC,UAAU,wBAAb,+DACAF,EAAAtH,EAAAuH,cAAA,OAAKC,UAAU,uBACV9B,GACD4B,EAAAtH,EAAAuH,cAAA,KACExN,KAAM0L,EACN+B,UAAU,6BACV5E,MAAM,4BAEN0E,EAAAtH,EAAAuH,cAAA,OAAKO,IAAKpC,EAAeqC,IAAI,iBAAiBP,UAAU,2BAG5DF,EAAAtH,EAAAuH,cAAA,OAAKC,UAAU,WACbF,EAAAtH,EAAAuH,cAAA,OAAKC,UAAU,WAAWQ,MAAM,MAAMC,OAAO,MAAMC,MAAM,8BACvDZ,EAAAtH,EAAAuH,cAAA,SACED,EAAAtH,EAAAuH,cAAA,UAAQC,UAAU,cAAcW,EAAE,KAAKC,GAAG,KAAKC,GAAG,KAAKC,KAAK,SAC5DhB,EAAAtH,EAAAuH,cAAA,UAAQC,UAAU,mBAAmBW,EAAE,KAAKC,GAAG,KAAKC,GAAG,KAAKC,KAAK,WAIrEhB,EAAAtH,EAAAuH,cAAA,KAAGC,UAAU,4BAIjBF,EAAAtH,EAAAuH,cAAA,OAAKC,UAAU,qBACbF,EAAAtH,EAAAuH,cAAA,KACEC,UAAU,0BACVzN,KAAM0L,EACN8C,QAASrH,KAAK0G,MAAMY,oBAHtB,iBAOAlB,EAAAtH,EAAAuH,cAAA,UAAQgB,QAASrH,KAAK0G,MAAMY,mBAAoBhB,UAAU,8BAA1D,YAtCC,YALeiB,aAqDtBC,GAAkBnD,GAClBoD,GAAqB,CACzBH,mBL9BgC,iBAAO,CAAEnQ,KAAM0M,MKiClC6D,eACbF,GACAC,GAFaC,CAGblB,IC3DamB,OAPf,SAA0BC,GACxB,IAAMC,EAAeC,SAASC,cAAc,4BACxCF,IACFA,EAAaG,QAAUJ,gdCwBZK,4KAvBO,IACVC,EAAelI,KAAK0G,MAApBwB,WACJA,GACFP,GAAiBO,oCAIZ,IAAAzB,EACqCzG,KAAK0G,MAAzCyB,EADD1B,EACC0B,eAAgBzG,EADjB+E,EACiB/E,MAAOyE,EADxBM,EACwBN,SAE/B,OACEC,EAAAtH,EAAAuH,cAAA,OAAKC,UAAU,aACbF,EAAAtH,EAAAuH,cAAA,OAAK+B,MAAO,CAAEC,gBAAe,OAAA1Q,OAASwQ,EAAT,MAA8B7B,UAAU,qBACrEF,EAAAtH,EAAAuH,cAAA,MAAIC,UAAU,oBAAd,oBACAF,EAAAtH,EAAAuH,cAAA,MAAIC,UAAU,uBAAd,WAA6C5E,GAC7C0E,EAAAtH,EAAAuH,cAAA,OAAKC,UAAU,sBACbF,EAAAtH,EAAAuH,cAAA,OAAKC,UAAU,mBAAmBH,YAjBrBoB,aCGRe,WAJY,SAAA1N,GAAA,IAAGgM,EAAHhM,EAAGgM,IAAH,OACzBR,EAAAtH,EAAAuH,cAAA,QAAMC,UAAU,eAAe8B,MAAO,CAAEC,gBAAe,OAAA1Q,OAASiP,EAAT,UCAnD2B,WAAUjJ,EAAQ,MAiCTkJ,GA/BS,SAAA5N,GAAA,IAAGqD,EAAHrD,EAAGqD,MAAOwK,EAAV7N,EAAU6N,YAAV,OAA8BxK,EAAMC,MAAM,CAAC,aAAc,QAC/EkI,EAAAtH,EAAAuH,cAAA,KAAGC,UAAU,sBAAsBzN,KAAMoF,EAAMC,MAAM,CAAC,aAAc,SAClEkI,EAAAtH,EAAAuH,cAAA,QAAMC,UAAU,gBAAgBmC,GAChCrC,EAAAtH,EAAAuH,cAAA,QAAMC,UAAU,eACdF,EAAAtH,EAAAuH,cAACqC,GAAD,CAAoB9B,IAAK3I,EAAMC,MAAM,CAAC,aAAc,QAAS,SAAU,EAAG,UAE1EkI,EAAAtH,EAAAuH,cAAA,QAAMC,UAAU,kBACdF,EAAAtH,EAAAuH,cAAA,QAAMC,UAAU,kBACbrI,EACEC,MAAM,CAAC,cAAe,WACtByK,MAAM,EAAG,GACTjQ,KAAK,OAEV0N,EAAAtH,EAAAuH,cAAA,QAAMC,UAAU,iBAAiBrI,EAAMC,MAAM,CAAC,aAAc,UAAW,EAAG,UAC1EkI,EAAAtH,EAAAuH,cAAA,QAAMC,UAAU,qBAAqBrI,EAAMC,MAAM,CAAC,aAAc,aAKtEkI,EAAAtH,EAAAuH,cAAA,KAAGC,UAAU,sBAAsBzN,KAAK,MACtCuN,EAAAtH,EAAAuH,cAAA,QAAMC,UAAU,gBAAgBmC,GAChCrC,EAAAtH,EAAAuH,cAAA,QAAMC,UAAU,eACdF,EAAAtH,EAAAuH,cAACqC,GAAD,CAAoB9B,IAAK2B,KAEzBnC,EAAAtH,EAAAuH,cAAA,QAAMC,UAAU,kBACdF,EAAAtH,EAAAuH,cAAA,QAAMC,UAAU,iBAAiBrI,EAAM5C,IAAI,gBAC3C+K,EAAAtH,EAAAuH,cAAA,QAAMC,UAAU,qBAAqBrI,EAAM5C,IAAI,ufC5BvD,IAAMuN,GAAehR,OAgDNiR,4CA7Cb,SAAAA,EAAYnC,GAAO,IAAAoC,EAAA,OAAAzQ,OAAA0Q,EAAA,EAAA1Q,CAAA2H,KAAA6I,IACjBC,EAAAE,EAAAC,KAAAjJ,KAAM0G,IACD3P,MAAQ,CAAEmS,SAAS,GACxBJ,EAAKK,cAAgBL,EAAKK,cAAcC,KAAnB/Q,OAAAgR,GAAA,EAAAhR,CAAAyQ,IAHJA,kEAOjBF,GAAaU,iBAAiB,SAAUtJ,KAAKmJ,8DAI7CP,GAAaW,oBAAoB,SAAUvJ,KAAKmJ,uDAGlC,IACND,EAAYlJ,KAAKjJ,MAAjBmS,QACFM,EAAiBZ,GAAaa,aAAe,EAE/CP,GAAWM,EAAiB,EAC9BxJ,KAAK0J,SAAS,CAAER,SAAS,IACfA,GAA8B,IAAnBM,GACrBxJ,KAAK0J,SAAS,CAAER,SAAS,qCAIpB,IAAAzC,EACuCzG,KAAK0G,MAA3ChF,EADD+E,EACC/E,MAAOiI,EADRlD,EACQkD,YAAaC,EADrBnD,EACqBmD,cACpBV,EAAYlJ,KAAKjJ,MAAjBmS,QAER,OACE9C,EAAAtH,EAAAuH,cAAA,OAAKC,UAAWuD,KAAW,iBAAkB,CAAEC,4BAA6BZ,KAC1E9C,EAAAtH,EAAAuH,cAAA,OAAKC,UAAU,wBACbF,EAAAtH,EAAAuH,cAAA,OAAKC,UAAU,yBAAyB5E,GACvCiI,GAEHvD,EAAAtH,EAAAuH,cAAA,OAAKC,UAAU,0BACbF,EAAAtH,EAAAuH,cAAA,UAAQC,UAAU,eAAee,QAASuC,GAA1C,4BArCWrC,2CCIRwC,WAAW,SAAAnP,GAAmB,IAAjBoP,EAAiBpP,EAAjBoP,YAAiBC,EACHC,mBAAS,IAAI7E,KAAK8E,OAASC,WADxBC,EAAAhS,OAAAiS,GAAA,EAAAjS,CAAA4R,EAAA,GAClCM,EADkCF,EAAA,GACrBG,EADqBH,EAAA,GAEzC,OACEjE,EAAAtH,EAAAuH,cAACoE,GAAA3L,EAAD,CACA4L,SAAUH,EACVI,SAAU,SAAAtK,GAAI,OAAI2J,EAAY3J,EAAMmK,IACpCI,QAAS,IAAIvF,KAZA,cAabwF,QAAS,IAAIxF,SClBFyF,GACJ,UADIA,GAGP,UCMFC,WAAWzL,EAAQ,MAsCV0L,GApCI,SAAApQ,GAAA,IACjByF,EADiBzF,EACjByF,KACA4K,EAFiBrQ,EAEjBqQ,kBACA9H,EAHiBvI,EAGjBuI,WACAqC,EAJiB5K,EAIjB4K,qBAJiB,OAMjBY,EAAAtH,EAAAuH,cAAA,OAAKC,UAAU,eACbF,EAAAtH,EAAAuH,cAAC6E,GAAD,CACE/C,eAAgB4C,GAChBrJ,MAAOrB,EACP6H,WAAY4C,IAEZ1E,EAAAtH,EAAAuH,cAAA,WACED,EAAAtH,EAAAuH,cAAC8E,GAAD,CAAUnB,YAAaiB,IACtB9H,EACE9H,IAAI,UACJ9C,IAAI,SAAC0F,EAAOmN,GAAR,OACHhF,EAAAtH,EAAAuH,cAACgF,GAAD,CACE5C,YAAa2C,EAAQ,EACrBnN,MAAOA,EACPqN,IAAG,GAAA3T,OAAKyT,OAIbjI,EAAW9H,IAAI,UAAU+I,KAAO,GAC/BgC,EAAAtH,EAAAuH,cAACkF,GAAD,CACE7J,MAAM,oBACNiI,YAAW,qFACXC,cAAepE,udCnCrBgG,2KACeC,GACbzL,KAAK0G,MAAM7O,SAAS6T,WAAaD,EAAU5T,SAAS6T,UACtD9T,OAAO+T,SAAS,EAAG,oCAKrB,OAAOvF,EAAAtH,EAAAuH,cAACuF,EAAA,EAAU5L,KAAK0G,cAREa,aAkBdsE,gBAAWL,cCjBXM,WAAA,kBACb1F,EAAAtH,EAAAuH,cAAA,OAAKC,UAAU,kBACbF,EAAAtH,EAAAuH,cAAC0F,GAAA,EAAD,CAASC,gBAAgB,SAAS1F,UAAU,uBAAuB2F,GAAG,QACpE7F,EAAAtH,EAAAuH,cAAA,QAAMC,UAAU,kBAChBF,EAAAtH,EAAAuH,cAAA,QAAMC,UAAU,qBAAhB,aAEFF,EAAAtH,EAAAuH,cAAC0F,GAAA,EAAD,CAASC,gBAAgB,SAAS1F,UAAU,uBAAuB2F,GAAG,eACpE7F,EAAAtH,EAAAuH,cAAA,QAAM6F,MAAM,mBAAZ,KACA9F,EAAAtH,EAAAuH,cAAA,QAAMC,UAAU,qBAAhB,WAEFF,EAAAtH,EAAAuH,cAAC0F,GAAA,EAAD,CAASC,gBAAgB,SAAS1F,UAAU,uBAAuB2F,GAAG,UACpE7F,EAAAtH,EAAAuH,cAAA,QAAM6F,MAAM,yBAAZ,KACA9F,EAAAtH,EAAAuH,cAAA,QAAMC,UAAU,qBAAhB,2dCsES6F,iKAlFX,OACE/F,EAAAtH,EAAAuH,cAAA,WACED,EAAAtH,EAAAuH,cAAA,OAAKC,UAAU,YACbF,EAAAtH,EAAAuH,cAAA,0BACAD,EAAAtH,EAAAuH,cAAA,oIAIAD,EAAAtH,EAAAuH,cAAA,0HAIAD,EAAAtH,EAAAuH,cAAA,iBACAD,EAAAtH,EAAAuH,cAAA,qFAGAD,EAAAtH,EAAAuH,cAAA,0NAIAD,EAAAtH,EAAAuH,cAAA,2DACAD,EAAAtH,EAAAuH,cAAA,4PAG6F,IAC3FD,EAAAtH,EAAAuH,cAAA,KAAGxN,KAAK,sGACNsF,OAAO,SACPiO,IAAI,uBAFN,uCAIK,KAEPhG,EAAAtH,EAAAuH,cAAA,mIAGAD,EAAAtH,EAAAuH,cAAA,8FACqF,IACnFD,EAAAtH,EAAAuH,cAAA,KAAGxN,KAAK,oFACNsF,OAAO,SACPiO,IAAI,uBAFN,SAFF,yxBAcAhG,EAAAtH,EAAAuH,cAAA,gEAGAD,EAAAtH,EAAAuH,cAAA,kCACyB,IACvBD,EAAAtH,EAAAuH,cAAA,KAAGxN,KAAK,+BAA+BsF,OAAO,SAASiO,IAAI,uBAA3D,wBAEK,IAJP,wMAQAhG,EAAAtH,EAAAuH,cAAA,0CAGAD,EAAAtH,EAAAuH,cAAA,kFAGAD,EAAAtH,EAAAuH,cAAA,OAAKC,UAAU,oBACbF,EAAAtH,EAAAuH,cAAA,KACEC,UAAU,eACVzN,KAAK,4CACLsF,OAAO,SACPiO,IAAI,sBACJ1K,MAAM,0BAEN0E,EAAAtH,EAAAuH,cAAA,KAAGC,UAAU,iCA3ELiB,qdCetB,IAAMwD,GAAWzL,EAAQ,KAEnB+M,4KAEFrM,KAAK0G,MAAM4F,gDAGJ,IAAA7F,EAOHzG,KAAK0G,MALPvD,EAFKsD,EAELtD,WACA9C,EAHKoG,EAGLpG,KACAmF,EAJKiB,EAILjB,qBACA+G,EALK9F,EAKL8F,WACAC,EANK/F,EAML+F,MAGF,OACEpG,EAAAtH,EAAAuH,cAAA,OAAKC,UAAU,OACbF,EAAAtH,EAAAuH,cAAA,OAAKC,UAAU,iBACbF,EAAAtH,EAAAuH,cAACyF,GAAD,MAEA1F,EAAAtH,EAAAuH,cAACoG,GAAD,MAEArG,EAAAtH,EAAAuH,cAAA,OAAKC,UAAU,eACbF,EAAAtH,EAAAuH,cAACuF,EAAA,EAAD,CAAOc,OAAK,EAACC,KAAI,GAAAhV,OAAK6U,EAAMxU,KAAO4U,OAAQ,kBAAMxG,EAAAtH,EAAAuH,cAACwG,GAAA,EAAD,CAAUZ,GAAG,mBAC9D7F,EAAAtH,EAAAuH,cAACyG,GAAD,CACEJ,OAAK,EACLC,KAAI,GAAAhV,OAAK6U,EAAMxU,IAAX,cACJ4U,OAAQ,kBACNxG,EAAAtH,EAAAuH,cAAC0G,GAAD,CACE1M,KAAMA,EACN4K,kBAAmBsB,EACnBpJ,WAAYA,EACZqC,qBAAsBA,OAI5BY,EAAAtH,EAAAuH,cAACyG,GAAD,CAAgBJ,OAAK,EAACC,KAAI,GAAAhV,OAAK6U,EAAMxU,IAAX,OAAqBgV,UAAWC,OAI9D7G,EAAAtH,EAAAuH,cAAA,OAAKC,UAAU,kBACbF,EAAAtH,EAAAuH,cAAA,OAAKiF,IAAKP,GAAUlE,IAAI,gBAAgBD,IAAKmE,cAxCjCxD,aA+ChBC,GAAkBjC,GAClBkC,GAAqB,CACzB6E,ad1C0B,kBAAM,SAAAjT,GAChCwG,QAAQ2C,IAAI,wBAEZnJ,EXF8B,SAAAA,GACV+B,IAAaC,IAAI,gBAGnCrC,EAAQ4C,QAAQ,YWDlBvC,EPhBAoD,EAAQ,CACNtF,KAVuB,0BAWvBa,IAAK,SOePqB,EJWmC,SAAAA,GAAQ,OAAIA,EAASmK,UkB2BxDgC,wBACA+G,WdpCwB,SAAClM,EAAM6M,GAAP,OAAsB,SAAA7T,GAC9CA,EJSqB,SAAAgH,GAAI,MACzB,CAAClJ,KAAM8L,GACNzG,QAAS6D,GIXDiF,CDnBe,SAAAjF,GAAI,OAAI8J,KAAO9J,GAAM8M,SAASC,UAAU,EAf1C,ICkCLC,CDzBO,SAAAhN,GACxB,IAAI+E,EAAUF,GAAQ7E,EATE,EASwBA,EAAKiN,UAErD,OAAOlI,GADO,IAAIC,KAAK8E,OAASC,UACNhF,EAAUF,GAAQE,GAAU,GCsB1BmI,CAAWlN,MACvChH,EAASmK,MACT0J,EAAW7M,McoCEqH,eACbF,GACAC,GAFaC,CAGb2E,ydCnEImB,4KAEF7F,GAAiBmD,qCAIjB,OACE1E,EAAAtH,EAAAuH,cAAA,YACED,EAAAtH,EAAAuH,cAAA,OAAKC,UAAU,SACbF,EAAAtH,EAAAuH,cAAA,OAAKC,UAAU,kBACbF,EAAAtH,EAAAuH,cAAA,MAAIC,UAAU,gBAAd,qCACAF,EAAAtH,EAAAuH,cAAA,UAAQC,UAAU,4BAA4Be,QAASrH,KAAK0G,MAAMtN,eAAlE,wBAIAgN,EAAAtH,EAAAuH,cAACoH,GAAA,EAAD,CAAMnH,UAAU,WAAW2F,GAAG,YAA9B,kBAIF7F,EAAAtH,EAAAuH,cAAA,QAAMC,UAAU,+BAnBFiB,aA2BlBE,GAAqB,CAAErO,iBAEdsO,eAHS,iBAAO,IAK7BD,GAFaC,CAGb8F,gdCgBaE,iKAhDX,IAAMC,EAASvW,EAAOI,oBAAoBsB,MAAM,KAChD,OACEsN,EAAAtH,EAAAuH,cAACM,GAAD,KACEP,EAAAtH,EAAAuH,cAAA,OAAKC,UAAU,YACbF,EAAAtH,EAAAuH,cAAA,8BACAD,EAAAtH,EAAAuH,cAAA,mLAKAD,EAAAtH,EAAAuH,cAAA,qCACAD,EAAAtH,EAAAuH,cAAA,4RAGqF,IACnFD,EAAAtH,EAAAuH,cAAA,KAAGxN,KAAK,sGAAsGsF,OAAO,SAASiO,IAAI,uBAAlI,uCAEK,KAEPhG,EAAAtH,EAAAuH,cAAA,yBACAD,EAAAtH,EAAAuH,cAAA,uJAGED,EAAAtH,EAAAuH,cAAA,MAAIC,UAAU,cAAcqH,EAAOpV,IAAI,SAAAkB,GAAK,OAAI2M,EAAAtH,EAAAuH,cAAA,UAAK5M,OAGvD2M,EAAAtH,EAAAuH,cAAA,WACAD,EAAAtH,EAAAuH,cAAA,KACElI,OAAO,SACPiO,IAAI,sBACJvT,KAAK,mFAHP,kCAOAuN,EAAAtH,EAAAuH,cAAA,OAAKC,UAAU,qBACbF,EAAAtH,EAAAuH,cAACoH,GAAA,EAAD,CAAMnH,UAAU,oBAAoB2F,GAAG,UAAvC,aACa,IACX7F,EAAAtH,EAAAuH,cAAA,QAAMuH,aAAW,KAAKC,KAAK,OAA3B,uCAvCQtG,kdCHhBuG,4KAEF9N,KAAK0G,MAAMqH,6CAIX,OAAO3H,EAAAtH,EAAAuH,cAAA,8BANYkB,aAWjBE,GAAqB,CAAEsG,U5BsBJ,kBAAM,SAAA1U,GAC7B,IAAMmC,EAAc7C,IAGpB,GAAI6C,EAAa,CACfJ,IAAavB,IAAI,cAAe2B,GAGhC,IAAIwS,EAAa5S,IAAaC,IAAI,eAAiB,IACnDD,IAAa6S,OAAO,cAGD,WAAfD,IACFA,EAAa,KAGfhV,EAAQ4C,QAAQoS,QAEhBhV,EAAQ4C,QAAQ,UAGlB,OAAOvC,EAAS,CAAElC,KAAMgC,O4BzCXuO,eAHS,iBAAO,IAK7BD,GAFaC,CAGboG,qcCLF,IAAMI,GAAoBC,YAAiBnV,GACrCoV,GAAc,CAACC,IAAOH,GAAmB5T,GAIzCgU,GAF4BC,IAAgBxO,WAAM7I,EAAMkX,GAA5BG,CAAyCC,IAE7DC,CADEC,YAAgBrW,OAAA8E,EAAA,EAAA9E,CAAA,GAAKsW,EAAN,CAAgBC,QAASC,OAGtDjX,OAAOkX,8BAAgClX,OAAOkX,gCAoBjCC,iKAfX,OACE3I,EAAAtH,EAAAuH,cAAC2I,EAAA,EAAD,CAAUV,MAAOA,IACflI,EAAAtH,EAAAuH,cAAC4I,EAAA,EAAD,CAAiBjW,QAASA,GACxBoN,EAAAtH,EAAAuH,cAAC6I,EAAA,EAAD,KACE9I,EAAAtH,EAAAuH,cAACuF,EAAA,EAAD,CAAOc,OAAK,EAACC,KAAK,SAASK,UAAWQ,KACtCpH,EAAAtH,EAAAuH,cAACuF,EAAA,EAAD,CAAOc,OAAK,EAACC,KAAK,YAAYK,UAAWU,KACzCtH,EAAAtH,EAAAuH,cAACuF,EAAA,EAAD,CAAOc,OAAK,EAACC,KAAK,YAAYK,UAAWc,KACzC1H,EAAAtH,EAAAuH,cAACuF,EAAA,EAAD,CAAOe,KAAK,IAAIK,UAAWX,eATrB9E,aChBZ4H,GAAcC,QACW,cAA7BxX,OAAOC,SAASwX,UAEe,UAA7BzX,OAAOC,SAASwX,UAEhBzX,OAAOC,SAASwX,SAAS7C,MACvB,2DAsCN,SAAS8C,GAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACT9L,KAAK,SAAAkM,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB9Y,QACfyY,UAAUC,cAAcO,WAK1BnQ,QAAQ2C,IAAI,6CAKZ3C,QAAQ2C,IAAI,2CAMrByN,MAAM,SAAAjU,GACL6D,QAAQ7D,MAAM,4CAA6CA,KCzEjEkU,IAAStD,OAAOxG,EAAAtH,EAAAuH,cAAC8J,GAAD,MAASrI,SAASsI,eAAe,SDclC,WACb,GAA6C,kBAAmBZ,UAAW,CAGzE,GADkB,IAAIa,IAAIC,gBAAwB1Y,OAAOC,UAC3CC,SAAWF,OAAOC,SAASC,OAIvC,OAGFF,OAAO0R,iBAAiB,OAAQ,WAC9B,IAAMiG,EAAK,GAAA5X,OAAM2Y,gBAAN,sBAEPnB,IAiDV,SAAiCI,GAE/BgB,MAAMhB,GACH9L,KAAK,SAAA3H,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAAS3B,QAAQkB,IAAI,gBAAgBmV,QAAQ,cAG7ChB,UAAUC,cAAcgB,MAAMhN,KAAK,SAAAkM,GACjCA,EAAae,aAAajN,KAAK,WAC7B7L,OAAOC,SAAS8Y,aAKpBrB,GAAgBC,KAGnBU,MAAM,WACLpQ,QAAQ2C,IACN,mEArEAoO,CAAwBrB,GAIxBC,UAAUC,cAAcgB,MAAMhN,KAAK,WACjC5D,QAAQ2C,IACN,+GAMJ8M,GAAgBC,MCzCxBsB","file":"static/js/main.bfa86c6f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/top-tracks.4b61606a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bb-placeholder.cdedb10b.jpg\";","// # App concept\r\n\r\nimport { fromJS } from 'immutable';\r\n\r\n// # Action Types\r\n\r\n// # Selectors\r\n\r\n// # Action Creators\r\n\r\n// # Reducer\r\n\r\nconst initialState = fromJS({});\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n","import ENV from '../env';\r\n\r\n\r\nconst config = {\r\n  API_URL: 'https://api.spotify.com/v1',\r\n  REALM_APP_ID: 'playlist-app-ectuj',\r\n  SPOTIFY_AUTHORIZE_URL: 'https://accounts.spotify.com/authorize',\r\n  SPOTIFY_AUTH_SCOPES: 'playlist-modify-public',\r\n  SPOTIFY_CLIENT_ID: ENV.SPOTIFY_CLIENT_ID,\r\n  CALLBACK_URL: `${window.location.origin}/billboardify/callback`,\r\n};\r\nexport default config;\r\n","export default {\r\n    SPOTIFY_CLIENT_ID: '11350c12c94648f5b300ecb1a560216a',\r\n    REALM_APP_ID: 'playlist-app-ectuj'\r\n};","import { isObject, isEmpty } from 'lodash';\r\n\r\nconst queryParametrize = (url, query) => {\r\n  let queryParametrizedUrl = url;\r\n\r\n  if (isObject(query) && !isEmpty(query)) {\r\n    queryParametrizedUrl +=\r\n      '?' +\r\n      Object.keys(query)\r\n        .map(k => {\r\n          return encodeURIComponent(k) + '=' + encodeURIComponent(query[k]);\r\n        })\r\n        .join('&');\r\n  }\r\n\r\n  return queryParametrizedUrl;\r\n};\r\n\r\nexport default queryParametrize;\r\n","import { last } from 'lodash';\r\n\r\nexport const parseAccessToken = () => {\r\n  const url = window.location.href;\r\n  const urlParts = url.split('#access_token=');\r\n\r\n  return last(urlParts);\r\n};\r\n\r\nexport default parseAccessToken;\r\n","import createHistory from 'history/createBrowserHistory';\r\n\r\nconst history = createHistory({ basename: '/billboardify' });\r\n\r\nexport default history;\r\n","// # Auth concept\r\n\r\nimport { fromJS } from 'immutable';\r\nimport localStorage from 'local-storage';\r\n\r\nimport config from '../config';\r\nimport queryParametrize from '../services/query-parametrize';\r\nimport parseAccessToken from '../services/auth';\r\nimport history from '../services/history';\r\n\r\n// # Action Types\r\nconst SET_USER_LOGGED_IN = 'auth/SET_USER_LOGGED_IN';\r\n\r\n// # Selectors\r\n\r\n// # Action Creators\r\nexport const authorizeUser = () => dispatch => {\r\n  const loginOpts = {\r\n    client_id: config.SPOTIFY_CLIENT_ID,\r\n    redirect_uri: config.CALLBACK_URL,\r\n    scope: config.SPOTIFY_AUTH_SCOPES,\r\n    response_type: 'token',\r\n  };\r\n  const loginUrl = queryParametrize(config.SPOTIFY_AUTHORIZE_URL, loginOpts);\r\n\r\n  window.location.href = loginUrl;\r\n};\r\n\r\nexport const checkLogin = () => dispatch => {\r\n  const accessToken = localStorage.get('accessToken');\r\n\r\n  if (!accessToken) {\r\n    history.replace('/login');\r\n  }\r\n\r\n  return;\r\n};\r\n\r\nexport const saveLogin = () => dispatch => {\r\n  const accessToken = parseAccessToken();\r\n\r\n  // redirect\r\n  if (accessToken) {\r\n    localStorage.set('accessToken', accessToken);\r\n\r\n    // try to get redirect from local storage\r\n    let redirectTo = localStorage.get('redirectTo') || '/';\r\n    localStorage.remove('redirectTo');\r\n\r\n    // we dont want to redirect to login anymore\r\n    if (redirectTo === '/login') {\r\n      redirectTo = '/';\r\n    }\r\n\r\n    history.replace(redirectTo);\r\n  } else {\r\n    history.replace('/login');\r\n  }\r\n\r\n  return dispatch({ type: SET_USER_LOGGED_IN });\r\n};\r\n\r\n// # Reducer\r\nconst initialState = fromJS({\r\n  isLoggedIn: false,\r\n});\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_USER_LOGGED_IN: {\r\n      return state.set('isLoggedIn', true);\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n","import axiosMiddleware from 'redux-axios-middleware';\r\nimport axios from 'axios';\r\nimport { last } from 'lodash';\r\nimport config from '../config';\r\n\r\nexport const client = axios.create({\r\n  baseURL: config.API_URL,\r\n  responseType: 'json',\r\n  headers: {\r\n    Accept: 'application/json',\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\nexport const axiosApiMiddleware = axiosMiddleware(client);\r\n\r\nexport const getActionTypes = (\r\n  action,\r\n  { errorSuffix = '_FAIL', successSuffix = '_SUCCESS' } = {}\r\n) => {\r\n  let types;\r\n  if (typeof action.type !== 'undefined') {\r\n    const { type } = action;\r\n    types = [type, `${type}${successSuffix}`, `${type}${errorSuffix}`];\r\n  } else if (typeof action.types !== 'undefined') {\r\n    const { types: _types } = action;\r\n    types = _types;\r\n  } else {\r\n    throw new Error('Action needs to have \"type\" or \"types\" key which is not null');\r\n  }\r\n  return types;\r\n};\r\n\r\nexport const getErrorActionType = (action, options) => last(getActionTypes(action, options));\r\n","/* eslint-disable import/prefer-default-export */\r\nimport localStorage from 'local-storage';\r\nimport { get, isNil } from 'lodash';\r\nimport { getErrorActionType } from './axios';\r\nimport history from './history';\r\nimport { authorizeUser } from '../concepts/auth';\r\nimport { getCurrentPathName } from '../concepts/route';\r\n\r\nconst getAccessToken = () => localStorage.get('accessToken');\r\n\r\nconst getAuthHeader = token => ( token ? {Authorization: `Bearer ${token}`} : {});\r\n\r\nconst isUnauthorized = status => status === 401;\r\nconst redirectToLogin = () => (dispatch, getState) => {\r\n  const accessToken = getAccessToken();\r\n  const state = getState();\r\n  const pathName = getCurrentPathName(state);\r\n\r\n  // add current path to local storage\r\n  // and redirect to it later after login\r\n  localStorage.set('redirectTo', pathName);\r\n\r\n  // Automatically login if token exists\r\n  // and it is most probably expired\r\n  if (!isNil(accessToken)) {\r\n    return dispatch(authorizeUser());\r\n  }\r\n\r\n  // otherwise redirect to login page\r\n  history.replace('/login');\r\n};\r\n\r\n// https://github.com/svrcekmichal/redux-axios-middleware#middleware-options\r\nconst handleApiError = response => {\r\n  const status = get(response, 'error.response.status');\r\n  const { error, action, next, options, dispatch } = response;\r\n\r\n  // On Unauthorized Request redirect to /login\r\n  if (isUnauthorized(status)) {\r\n    return dispatch(redirectToLogin());\r\n  }\r\n\r\n  const errorObject = {\r\n    text: get(error, 'response.statusText', error.message),\r\n    code: get(error, 'response.status'),\r\n  };\r\n\r\n  const nextAction = {\r\n    type: getErrorActionType(action, options),\r\n    error: errorObject,\r\n    payload: get(action, 'payload'),\r\n  };\r\n\r\n  next(nextAction);\r\n  return nextAction;\r\n};\r\n\r\nexport const apiCall = ({\r\n  endpoint,\r\n  type,\r\n  types,\r\n  payload,\r\n  method = 'GET',\r\n  ...opts\r\n}) => dispatch => {\r\n  // Get access token from state\r\n  const token = getAccessToken();\r\n  const authHeader = getAuthHeader(token);\r\n\r\n  return dispatch({\r\n    type,\r\n    types,\r\n    payload: {\r\n      ...payload,\r\n      request: {\r\n        url: endpoint,\r\n        method,\r\n        headers: {\r\n          ...authHeader,\r\n        },\r\n        ...opts,\r\n      },\r\n      options: {\r\n        onError: handleApiError,\r\n      },\r\n    },\r\n  });\r\n};\r\n","// react-router-redux\r\nimport { get } from 'lodash';\r\n\r\nexport const getCurrentPathName = state => get(state, ['routing', 'location', 'pathname']);\r\n","// # User concept\r\n\r\nimport { fromJS } from 'immutable';\r\nimport { apiCall } from '../services/api';\r\n\r\n// # Action Types\r\nconst FETCH_USER_PROFILE = 'user/FETCH_USER_PROFILE';\r\nconst FETCH_USER_PROFILE_SUCCESS = 'user/FETCH_USER_PROFILE_SUCCESS';\r\n// const FETCH_USER_PROFILE_FAIL = 'user/FETCH_USER_PROFILE_FAIL';\r\n\r\n// # Selectors\r\nexport const getUser = state => state.user.get('user');\r\n\r\n// # Action Creators\r\nexport const fetchUserProfile = () =>\r\n  apiCall({\r\n    type: FETCH_USER_PROFILE,\r\n    url: '/me',\r\n  });\r\n\r\n// # Reducer\r\n\r\nconst initialState = fromJS({\r\n  user: {},\r\n  isLoadingUser: false,\r\n});\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case FETCH_USER_PROFILE_SUCCESS: {\r\n      return state.set('user', fromJS(action.payload.data));\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n","// # Play history concept\r\n\r\nimport { fromJS } from 'immutable';\r\nimport { createSelector } from 'reselect';\r\n\r\nimport { apiCall } from '../services/api';\r\n\r\n// # Action Types\r\n// const FETCH_RECENTLY_PLAYED = 'history/FETCH_RECENTLY_PLAYED';\r\n// const FETCH_RECENTLY_PLAYED_SUCCESS = 'history/FETCH_RECENTLY_PLAYED_SUCCESS';\r\n// const FETCH_RECENTLY_PLAYED_FAIL = 'history/FETCH_RECENTLY_PLAYED_FAIL';\r\n\r\nconst FETCH_PLAY_HISTORY = 'history/FETCH_PLAY_HISTORY';\r\nconst FETCH_PLAY_HISTORY_SUCCESS = 'history/FETCH_PLAY_HISTORY_SUCCESS';\r\n// const FETCH_PLAY_HISTORY_FAIL = 'history/FETCH_PLAY_HISTORY_FAIL';\r\n\r\n// # Selectors\r\nexport const getPlayHistory = state => state.playHistory.get('history');\r\n\r\nexport const getRecentlyPlayedUris = createSelector(getPlayHistory, tracks =>\r\n  tracks.map(track => track.getIn(['track', 'uri']))\r\n);\r\n\r\nconst getFirstImage = target => target.getIn(['track', 'album', 'images', 0, 'url']);\r\nexport const getPlayHistoryImages = createSelector(getPlayHistory, playHistory =>\r\n  playHistory.map(getFirstImage)\r\n);\r\n\r\n// # Action Creators\r\nexport const fetchRecentlyPlayed = (params = {}) =>\r\n  apiCall({\r\n    type: FETCH_PLAY_HISTORY,\r\n    url: '/me/player/recently-played',\r\n    params: Object.assign({}, { limit: 50 }, params),\r\n  });\r\n\r\nexport const fetchPlayHistory = () => dispatch => {\r\n  return dispatch(fetchRecentlyPlayed());\r\n};\r\n\r\n// # Reducer\r\n\r\nconst initialState = fromJS({\r\n  history: {},\r\n  isLoadingHistory: false,\r\n});\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case FETCH_PLAY_HISTORY_SUCCESS: {\r\n      return state.set('history', fromJS(action.payload.data.items));\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n","import * as Realm from \"realm-web\";\r\n\r\nimport config from '../config';\r\n\r\n\r\nconst appConfig = {\r\n  id: config.REALM_APP_ID,\r\n  timeout: 10000, // timeout in milliseconds\r\n};\r\nconst app = new Realm.App(appConfig);\r\n\r\n\r\nconst loginAnonymous = async () => {\r\n  var assert = require('assert');\r\n  // Create API Key credentials\r\n  const credentials = Realm.Credentials.anonymous();\r\n  try {\r\n    // Authenticate the user\r\n    const user = await app.logIn(credentials);\r\n\r\n    // `App.currentUser` updates to match the logged in user\r\n    assert(user.id === app.currentUser.id)\r\n    return user\r\n  } catch(err) {\r\n    console.error(\"Failed to log in\", err);\r\n  }\r\n}\r\n\r\nconst getRanking = async (rankingCollection, date) => {\r\n  try {\r\n    const rankingQueryFilter = {_id: date};\r\n    const rankingQueryOptions = {'projection': {_id: 0}};\r\n    const rankingDocument = await rankingCollection.findOne(rankingQueryFilter, rankingQueryOptions);\r\n    return rankingDocument.ranking;\r\n  } catch(err) {\r\n    console.error(`Failed to get ranking of ${date}`, err);\r\n    return null;\r\n  }\r\n}\r\n\r\nconst getTrackInfo = async (trackInfoCollection, item) => {\r\n  if (!item.uri) {\r\n    return {'trackName': item.title,\r\n            'trackArtist': item.artist,\r\n            'track_info': {'uri': null},\r\n            'artist_info': {'genres': 'N/A'}};\r\n  }\r\n  try {\r\n  const trackInfoQueryFilter = {_id: item.uri};\r\n  const trackInfoQueryOptions = {'projection': {_id: 0}};\r\n  return trackInfoCollection.findOne(trackInfoQueryFilter, trackInfoQueryOptions);\r\n  } catch(err) {\r\n    console.error(`Failed to get track info of ${item.uri}`, err);\r\n    return null;\r\n  }\r\n}\r\n\r\n\r\nexport const getTop50 = async (date) => {\r\n  try {\r\n    const user = await loginAnonymous();\r\n    console.log(\"Successfully logged in!\")\r\n    const mongo = user.mongoClient(\"mongodb-atlas\");\r\n    const rankingCollection = mongo.db(\"data\").collection(\"billboard_rankings\");\r\n    const trackInfoCollection = mongo.db(\"data\").collection(\"spotify_info\");\r\n    const ranking = await getRanking(rankingCollection, date);\r\n    const trackInfo = await Promise.all(ranking.map(item => getTrackInfo(trackInfoCollection, item)));\r\n    return trackInfo;\r\n  } catch(err) {\r\n    console.error(`Failed to get Top 50 of ${date}`, err);\r\n  }\r\n}\r\n\r\n","// # Play history concept\r\n\r\nimport { fromJS, Map } from 'immutable';\r\nimport { createSelector } from 'reselect';\r\n\r\nimport { getTop50 }  from '../services/mongodb';\r\n\r\n// # Action Types\r\nconst CLEAR_TOP_50 = 'history/CLEAR_TOP_50';\r\nconst FETCH_TOP_50_SUCCESS = 'history/FETCH_TOP_50_SUCCESS';\r\n\r\nconst SET_DATE = 'history/SET_DATE';\r\n\r\n// # Selectors\r\nexport const getTopTracks = state => state.topHistory.get('tracks');\r\nexport const getDate = state => state.topHistory.get('date');\r\n\r\nexport const getTopHistory = createSelector(getTopTracks, tracks =>\r\n  fromJS({tracks})\r\n);\r\n\r\nexport const getTopTracksUris = createSelector(getTopTracks, tracks =>\r\n  tracks.map(track => track.getIn(['track_info', 'uri']))\r\n);\r\n\r\nconst getFirstTrackImage = target => target.getIn(['track_info', 'album', 'images', 0, 'url']);\r\n\r\nexport const getTrackImages = createSelector(getTopTracks, tracks =>\r\n  tracks.map(getFirstTrackImage)\r\n);\r\n\r\n// # Action Creators\r\nexport const fetchTop = () => (dispatch, getState) => {\r\n  const date = getDate(getState());\r\n  getTop50(date).then((items) => {\r\n    dispatch({type: CLEAR_TOP_50});\r\n    dispatch(\r\n      {type: FETCH_TOP_50_SUCCESS,\r\n      payload: items\r\n      });\r\n  });\r\n};\r\n\r\nexport const fetchTopHistory = () => dispatch => dispatch(fetchTop());\r\n\r\nexport const setDate = date => ( \r\n  {type: SET_DATE,\r\n   payload: date,\r\n  });\r\n\r\n// # Reducer\r\nconst initialState = fromJS({\r\n  tracks: {},\r\n  date: '2020-11-18',\r\n  isLoading: false,\r\n});\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case CLEAR_TOP_50: {\r\n      // Fill tracks\r\n      return state.set('tracks', Map());\r\n    }\r\n\r\n    case FETCH_TOP_50_SUCCESS: {\r\n      // Fill tracks\r\n      return state.set('tracks', fromJS(action.payload));\r\n    }\r\n\r\n    case SET_DATE: {\r\n      console.log('The payload is', action.payload);\r\n      return state.set('date', action.payload);\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n","// # Popup concept\r\nimport { fromJS } from 'immutable';\r\nimport { createSelector, createStructuredSelector } from 'reselect';\r\nimport { isNil } from 'lodash';\r\n\r\n// # Action Types\r\nconst OPEN_PLAYLIST_POPUP = 'playlistPopup/OPEN_PLAYLIST_POPUP';\r\nconst CLOSE_PLAYLIST_POPUP = 'playlistPopup/CLOSE_PLAYLIST_POPUP';\r\nconst SET_PLAYLIST_IMAGES = 'playlistPopup/SET_PLAYLIST_IMAGES';\r\n\r\n// # Selectors\r\nexport const getPlaylistPopupUri = state => state.playlistPopup.get('uri');\r\nexport const getPlaylistPopupVisibility = createSelector(getPlaylistPopupUri, uri => !isNil(uri));\r\n\r\nexport const getPlaylistImages = state => state.playlistPopup.get('playlistImages');\r\nexport const getPlaylistImage = createSelector(getPlaylistImages, imageList => {\r\n  if (!imageList || imageList.size === 0) {\r\n    return null;\r\n  }\r\n\r\n  // prefer image at index 1 which is 300px, fallback to first image which is 640px\r\n  return imageList.getIn([1, 'url']) || imageList.getIn([0, 'url']);\r\n});\r\n\r\nexport const getPopupData = createStructuredSelector({\r\n  playlistUri: getPlaylistPopupUri,\r\n  playlistImage: getPlaylistImage,\r\n  isVisible: getPlaylistPopupVisibility,\r\n});\r\n\r\n// # Action Creators\r\nexport const openPlaylistPopup = uri => ({ type: OPEN_PLAYLIST_POPUP, payload: uri });\r\nexport const closePlaylistPopup = () => ({ type: CLOSE_PLAYLIST_POPUP });\r\nexport const setPlaylistImages = imageList => ({ type: SET_PLAYLIST_IMAGES, payload: imageList });\r\n\r\n// # Reducer\r\nconst initialState = fromJS({\r\n  uri: null,\r\n  playlistImages: [],\r\n});\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case OPEN_PLAYLIST_POPUP: {\r\n      return state.set('uri', action.payload);\r\n    }\r\n\r\n    case CLOSE_PLAYLIST_POPUP: {\r\n      return state.set('uri', null).set('playlistImages', fromJS([]));\r\n    }\r\n\r\n    case SET_PLAYLIST_IMAGES: {\r\n      return state.set('playlistImages', fromJS(action.payload));\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n","// # Playlist concept\r\n\r\nimport { fromJS } from 'immutable';\r\nimport { get, isNil,} from 'lodash';\r\n\r\nimport { getUser } from './user';\r\nimport { getTopTracksUris, getDate } from './top-history';\r\nimport { openPlaylistPopup, setPlaylistImages } from './playlist-popup';\r\nimport { apiCall } from '../services/api';\r\n\r\n// # Action Types\r\nconst CREATE_PLAYLIST = 'playlist/CREATE_PLAYLIST';\r\nconst CREATE_PLAYLIST_SUCCESS = 'playlist/CREATE_PLAYLIST_SUCCESS';\r\n\r\nconst GET_PLAYLIST_IMAGE = 'playlist/GET_PLAYLIST_IMAGE';\r\n\r\nconst ADD_TRACKS_TO_PLAYLIST = 'playlist/ADD_TRACKS_TO_PLAYLIST';\r\n\r\n// # Selectors\r\nexport const getCreatingPlayListStatus = state => state.playList.get('isCreatingPlaylist');\r\nexport const getPlaylistImages = state => state.playList.get('playlistImages');\r\n\r\n// # Action Creators\r\nexport const createPlaylist = (params = {}) => (dispatch, getState) => {\r\n  console.log('playlist state is', getState());\r\n  const user = getUser(getState());\r\n  console.log('user is', user);\r\n  const userId = user.get('id');\r\n\r\n  if (!userId) {\r\n    return null;\r\n  }\r\n\r\n  return dispatch(\r\n    apiCall({\r\n      type: CREATE_PLAYLIST,\r\n      url: `/users/${userId}/playlists`,\r\n      method: 'POST',\r\n      data: params,\r\n    })\r\n  );\r\n};\r\n\r\nexport const fetchPlaylistImages = playlistId => (dispatch, getState) => {\r\n  const user = getUser(getState());\r\n  const userId = user.get('id');\r\n\r\n  if (!userId) {\r\n    return null;\r\n  }\r\n\r\n  return dispatch(\r\n    apiCall({\r\n      type: GET_PLAYLIST_IMAGE,\r\n      url: `/users/${userId}/playlists/${playlistId}/images`,\r\n      method: 'GET',\r\n    })\r\n  );\r\n};\r\n\r\nexport const fetchNewPlaylistImage = playlistId => dispatch =>\r\n  dispatch(fetchPlaylistImages(playlistId)).then(action =>\r\n    dispatch(setPlaylistImages(action.payload.data))\r\n  );\r\n\r\nexport const addTracksToPlayList = (playlistId, tracks) => (dispatch, getState) => {\r\n  const user = getUser(getState());\r\n  const userId = user.get('id');\r\n\r\n  if (!userId) {\r\n    return null;\r\n  }\r\n\r\n  return dispatch(\r\n    apiCall({\r\n      type: ADD_TRACKS_TO_PLAYLIST,\r\n      url: `users/${userId}/playlists/${playlistId}/tracks`,\r\n      method: 'POST',\r\n      data: { uris: tracks },\r\n    })\r\n  );\r\n};\r\n\r\n\r\nexport const createTopTracksPlaylist = () => (dispatch, getState) => {\r\n  const state = getState();\r\n  const tracks = getTopTracksUris(state);\r\n  const nonNullTracks = tracks.filter(track => track != null);\r\n  const date = getDate(state);\r\n\r\n  if (!nonNullTracks.size) {\r\n    return;\r\n  }\r\n\r\n  return dispatch(\r\n    createPlaylist({\r\n      name: `Billboard Top 50 • Week of ${date}`,\r\n    })\r\n  ).then(response => {\r\n    const playlist = get(response, 'payload.data');\r\n    const playlistId = get(playlist, 'id');\r\n    const playlistUri = get(playlist, 'uri');\r\n\r\n    if (isNil(playlistId) || !nonNullTracks.size) {\r\n      return null;\r\n    }\r\n\r\n    dispatch(addTracksToPlayList(playlistId, nonNullTracks.toJS())).then(() => {\r\n      dispatch(openPlaylistPopup(playlistUri));\r\n      dispatch(fetchNewPlaylistImage(playlistId));\r\n    });\r\n  });\r\n};\r\n\r\n\r\n// # Reducer\r\nconst initialState = fromJS({\r\n  isCreatingPlaylist: false,\r\n});\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case CREATE_PLAYLIST: {\r\n      return state.set('isCreatingPlaylist', true);\r\n    }\r\n\r\n    case CREATE_PLAYLIST_SUCCESS: {\r\n      return state.set('isCreatingPlaylist', false);\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n","import moment from \"moment\";\r\n\r\nconst DATE_STRING_END = 10;\r\nconst WEDNESDAY_ISO_INT = 3;\r\n\r\nexport const addDays = (date, days) => {\r\n  var newDate = new Date(date);\r\n  newDate.setDate(newDate.getDate() + days);\r\n  return newDate;\r\n}\r\n\r\nexport const adjustDate = date => {\r\n  var newDate = addDays(date, WEDNESDAY_ISO_INT - date.getDay());\r\n  const today = new Date(moment().toDate());\r\n  return newDate <= today ? newDate : addDays(newDate, -7);\r\n}\r\n\r\nexport const dateString = date => moment(date).format().substring(0, DATE_STRING_END);","// # App view concept\r\n//\r\n// This concept does not have reducer and it will work just as a combining\r\n// \"view-concept\" for \"core-concepts\"\r\n\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport { checkLogin } from './auth';\r\nimport { fetchUserProfile, getUser } from './user';\r\nimport {\r\n  fetchTopHistory,\r\n  fetchTop,\r\n  getTopHistory,\r\n  getDate,\r\n  setDate\r\n} from './top-history';\r\nimport { createTopTracksPlaylist } from './playlist';\r\nimport { adjustDate, dateString } from './calendar';\r\n\r\n// # Selectors\r\nexport const getAppViewData = createStructuredSelector({\r\n  user: getUser,\r\n  date: getDate,\r\n  topHistory: getTopHistory,\r\n});\r\n\r\n// # Action creators\r\nexport const startAppView = () => dispatch => {\r\n  console.log('Starting app view...');\r\n\r\n  dispatch(checkLogin());\r\n  dispatch(fetchUserProfile());\r\n  dispatch(fetchTopHistory());\r\n};\r\n\r\nexport const updateDate = (date, changeDate) => dispatch => {\r\n  dispatch(setDate(dateString(adjustDate(date))));\r\n  dispatch(fetchTop());\r\n  changeDate(date);\r\n};\r\n\r\nexport const createTracksPlaylist = createTopTracksPlaylist;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Modal.css';\r\n\r\nconst Modal = ({ children }) => (\r\n  <div className=\"modal\">\r\n    <div className=\"modal__content\">{children}</div>\r\n  </div>\r\n);\r\n\r\nModal.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nModal.defaultProps = {\r\n  children: undefined,\r\n};\r\n\r\nexport default Modal;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { closePlaylistPopup, getPopupData } from '../../concepts/playlist-popup';\r\nimport Modal from '../../components/Modal';\r\nimport './PlaylistPopup.css';\r\n\r\nclass PlaylistPopup extends Component {\r\n  render() {\r\n    const { playlistUri, playlistImage, isVisible } = this.props;\r\n\r\n    if (!isVisible) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <Modal>\r\n        <div className=\"playlist-popup\">\r\n          <h3 className=\"playlist-popup__title\">Hooray!</h3>\r\n          <p className=\"playlist-popup__info\">Your new playlist is now available in your Spotify account.</p>\r\n          <div className=\"save-form-success\">\r\n            {!!playlistImage && (\r\n              <a\r\n                href={playlistUri}\r\n                className=\"playlist-popup__image-link\"\r\n                title=\"Open Playlist in Spotify\"\r\n              >\r\n                <img src={playlistImage} alt=\"Playlist cover\" className=\"playlist-popup__image\" />\r\n              </a>\r\n            )}\r\n            <div className=\"ok-sign\">\r\n              <svg className=\"progress\" width=\"150\" height=\"150\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <g>\r\n                  <circle className=\"circle_base\" r=\"72\" cy=\"75\" cx=\"75\" fill=\"none\" />\r\n                  <circle className=\"circle_animation\" r=\"72\" cy=\"75\" cx=\"75\" fill=\"none\" />\r\n                </g>\r\n              </svg>\r\n\r\n              <i className=\"icon ion-android-done\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"playlist__buttons\">\r\n            <a\r\n              className=\"btn btn-inline btn-dark\"\r\n              href={playlistUri}\r\n              onClick={this.props.closePlaylistPopup}\r\n            >\r\n              Open Playlist\r\n            </a>\r\n            <button onClick={this.props.closePlaylistPopup} className=\"btn btn-inline btn-default\">\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = getPopupData;\r\nconst mapDispatchToProps = {\r\n  closePlaylistPopup,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PlaylistPopup);\r\n","// Set <meta name=\"theme-color\" /> which changes color of\r\n// URL bar in mobile Chrome\r\nfunction changeThemeColor(color) {\r\n  const themeMetaTag = document.querySelector('meta[name=\"theme-color\"]');\r\n  if (themeMetaTag) {\r\n    themeMetaTag.content = color;\r\n  }\r\n}\r\n\r\nexport default changeThemeColor;\r\n","import React, { Component } from 'react';\r\n\r\nimport changeThemeColor from '../../services/change-theme';\r\nimport './ListPage.css';\r\n\r\nclass ListPage extends Component {\r\n  componentDidMount() {\r\n    const { themeColor } = this.props;\r\n    if (themeColor) {\r\n      changeThemeColor(themeColor);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { headerImageSrc, title, children } = this.props;\r\n\r\n    return (\r\n      <div className=\"list-page\">\r\n        <div style={{ backgroundImage: `url(${headerImageSrc})` }} className=\"list-page__image\" />\r\n        <h1 className=\"list-page__title\">Billboard Top 50</h1>\r\n        <h2 className=\"list-page__subtitle\">Week of {title}</h2>\r\n        <div className=\"list-page__content\">\r\n          <div className=\"list-page__list\">{children}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListPage;\r\n","import React from 'react';\r\n\r\nimport './ListItemCoverImage.css';\r\n\r\nconst ListItemCoverImage = ({ src }) => (\r\n  <span className=\"track__cover\" style={{ backgroundImage: `url(${src})` }} />\r\n);\r\n\r\nexport default ListItemCoverImage;\r\n","import React from 'react';\r\n\r\nimport ListItemCoverImage from '../ListItemCoverImage';\r\nimport './TopHistoryTrack.css';\r\n\r\nconst nullImg = require('../../assets/images/bb-placeholder.jpg');\r\n\r\nconst TopHistoryTrack = ({ track, orderNumber }) => ( track.getIn(['track_info', 'uri']) ?\r\n  <a className=\"track-history__item\" href={track.getIn(['track_info', 'uri'])}>\r\n    <span className=\"order-number\">{orderNumber}</span>\r\n    <span className=\"track__info\">\r\n      <ListItemCoverImage src={track.getIn(['track_info', 'album', 'images', 2, 'url'])} />\r\n\r\n      <span className=\"track__summary\">\r\n        <span className=\"artist__genres\">\r\n          {track\r\n            .getIn(['artist_info', 'genres'])\r\n            .slice(0, 3)\r\n            .join(', ')}\r\n        </span>\r\n        <span className=\"track__artist\">{track.getIn(['track_info', 'artists', 0, 'name'])}</span>\r\n        <span className=\"track__track-name\">{track.getIn(['track_info', 'name'])}</span>\r\n      </span>\r\n    </span>\r\n    </a>\r\n  :\r\n  <a className=\"track-history__item\" href=\"/#\">\r\n    <span className=\"order-number\">{orderNumber}</span>\r\n    <span className=\"track__info\">\r\n      <ListItemCoverImage src={nullImg} />\r\n\r\n      <span className=\"track__summary\">\r\n        <span className=\"track__artist\">{track.get('trackArtist')}</span>\r\n        <span className=\"track__track-name\">{track.get('trackName')}</span>\r\n      </span>\r\n    </span>\r\n    </a>);\r\n\r\nexport default TopHistoryTrack;\r\n","import React, { Component } from 'react';\r\nimport classnames from 'classnames';\r\n\r\nimport './ListActionPanel.css';\r\n\r\nconst scrollTarget = window;\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { isOnTop: true };\r\n    this.scrollWatcher = this.scrollWatcher.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    scrollTarget.addEventListener('scroll', this.scrollWatcher);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    scrollTarget.removeEventListener('scroll', this.scrollWatcher);\r\n  }\r\n\r\n  scrollWatcher() {\r\n    const { isOnTop } = this.state;\r\n    const scrollPosition = scrollTarget.pageYOffset || 0;\r\n\r\n    if (isOnTop && scrollPosition > 0) {\r\n      this.setState({ isOnTop: false });\r\n    } else if (!isOnTop && scrollPosition === 0) {\r\n      this.setState({ isOnTop: true });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { title, description, onActionClick } = this.props;\r\n    const { isOnTop } = this.state;\r\n\r\n    return (\r\n      <div className={classnames('action-buttons', { 'action-buttons--scrolled': !isOnTop })}>\r\n        <div className=\"action-buttons__info\">\r\n          <div className=\"action-buttons__title\">{title}</div>\r\n          {description}\r\n        </div>\r\n        <div className=\"action-buttons__button\">\r\n          <button className=\"btn btn-dark\" onClick={onActionClick}>\r\n            Create Playlist\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, {useState} from 'react';\r\nimport moment from \"moment\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nconst BEG_DATE = '1980-01-02';\r\n\r\n// CSS Modules, react-datepicker-cssmodules.css\r\n// import 'react-datepicker/dist/react-datepicker-cssmodules.css';\r\n\r\n\r\nexport const Calendar = ({onSelection}) => {\r\n  const [currentDate, setCurrentDate] = useState(new Date(moment().toDate()));\r\n  return (\r\n    <DatePicker\r\n    selected={currentDate}\r\n    onChange={date => onSelection(date, setCurrentDate)}\r\n    minDate={new Date(BEG_DATE)}\r\n    maxDate={new Date()}/>\r\n  );\r\n};","export default {\r\n  DEFAULT: '#C6E1DC',\r\n  PINK: '#e550a7',\r\n  BLUE: '#5d42e5',\r\n  YELLOW: '#ba8e00',\r\n};\r\n","import React from 'react';\r\n\r\nimport ListPage from '../ListPage';\r\nimport TopHistoryTrack from '../TopHistoryTrack';\r\nimport ListActionPanel from '../ListActionPanel';\r\nimport {Calendar} from '../Calendar/Calendar';\r\nimport ThemeColors from '../../constants/ThemeColors';\r\nimport './TopHistory.css';\r\n\r\nconst trackImg = require('../../assets/images/top-tracks.jpg');\r\n\r\nconst TopHistory = ({\r\n  date,\r\n  updateCurrentDate,\r\n  topHistory,\r\n  createTracksPlaylist\r\n}) => (\r\n  <div className=\"top-history\">\r\n    <ListPage\r\n      headerImageSrc={trackImg}\r\n      title={date}\r\n      themeColor={ThemeColors.BLUE}\r\n    >\r\n      <div>\r\n        <Calendar onSelection={updateCurrentDate}/>\r\n        {topHistory\r\n          .get('tracks')\r\n          .map((track, index) => (\r\n            <TopHistoryTrack\r\n              orderNumber={index + 1}\r\n              track={track}\r\n              key={`${index}`}\r\n            />\r\n          ))}\r\n\r\n        {topHistory.get('tracks').size > 0 && (\r\n          <ListActionPanel\r\n            title=\"Create a Playlist\"\r\n            description={`This creates a playlist from the selected week's Top 50 (if available on Spotify).`}\r\n            onActionClick={createTracksPlaylist}\r\n          />\r\n        )}\r\n      </div>\r\n    </ListPage>\r\n  </div>\r\n);\r\n\r\nexport default TopHistory;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, withRouter } from 'react-router-dom';\r\n\r\nclass ScrollTopRoute extends Component {\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.location.pathname !== prevProps.location.pathname) {\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <Route {...this.props} />;\r\n  }\r\n}\r\n\r\nScrollTopRoute.propTypes = {\r\n  location: PropTypes.shape({\r\n    pathname: PropTypes.string,\r\n  }).isRequired,\r\n};\r\n\r\nexport default withRouter(ScrollTopRoute);\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport './AppNavigation.css';\r\n\r\nexport default () => (\r\n  <div className=\"App-navigation\">\r\n    <NavLink activeClassName=\"active\" className=\"App-navigation__link\" to=\"/app\">\r\n      <span className=\"icon ion-help\" />\r\n      <span className=\"navigation__label\">App Info</span>\r\n    </NavLink>\r\n    <NavLink activeClassName=\"active\" className=\"App-navigation__link\" to=\"/top-tracks\">\r\n      <span class=\"icon ion-podium\"> </span>\r\n      <span className=\"navigation__label\">Top 50</span>\r\n    </NavLink>\r\n    <NavLink activeClassName=\"active\" className=\"App-navigation__link\" to=\"/login\">\r\n      <span class=\"icon ion-android-exit\"> </span>\r\n      <span className=\"navigation__label\">Log Out</span>\r\n    </NavLink>\r\n\r\n  </div>\r\n);\r\n\r\n","import React, { Component } from 'react';\r\nimport './AppHelp.css';\r\n\r\nclass Apphelp extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"app-help\">\r\n          <h1>Billboardify</h1>\r\n          <p>\r\n            With Billboardify you can discover (or rediscover) any song that appeared on the\r\n            Billboard Top 50 in the past 40 years!\r\n          </p>\r\n          <p>\r\n            Refresh your memories by exploring each week's Top 50, and create Spotify\r\n            playlists from your favorite weeks!\r\n          </p>\r\n          <h2>FAQ</h2>\r\n          <h3>\r\n            What's the point of this app when I can just go to Billboard's website?\r\n          </h3>\r\n          <p>\r\n            This app allows you to save any week's Top 50 chart as a Spotify playlist, a feature that Billboard's website doesn't have.\r\n            In fact, as far as I can tell, this is the only app that provides such a service.\r\n          </p>\r\n          <h3>Why do you need access to my Spotify account?</h3>\r\n          <p>\r\n            Billboardify requires a Spotify account to save playlists. Account access is client-side only and\r\n            secured by the OAuth 2 authentication protocol, and\r\n            your Spotify data is not stored.  For more information on the login procedure, visit this {' '}\r\n            <a href=\"https://developer.spotify.com/documentation/general/guides/authorization-guide/#implicit-grant-flow\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\">\r\n              guide on the authorization process.\r\n            </a>{' '}\r\n          </p>\r\n          <h3>\r\n            Billboard charts go back to 1958, why don't you have those years?  And what about the bottom 50 songs in the Hot 100?\r\n          </h3>\r\n          <p>\r\n            The songs in the app are linked to Spotify via URIs (read more about Spotify URIs {' '}\r\n            <a href=\"https://community.spotify.com/t5/Spotify-Answers/What-s-a-Spotify-URI/ta-p/919201\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\">\r\n              here)\r\n            </a>, and were scraped from Billboard's website using a web scraper made in Python (see the repo below).  Although\r\n            the scraper's post-1980 success rate was about 99%, its success rate declined sharply for years before 1980.  This is\r\n            due to a few reasons, but the biggest reason is that a lot of the songs simply weren't on Spotify!  The web scraper's\r\n            success rate was also poor for songs in the bottom half of the Hot 100, especially for years pre-dating the rise of music streaming services\r\n            (roughly 2010 and before).  As it stands, many pre-2010 songs hovering near the bottom of the Top 50 have only a couple thousand plays on\r\n            Spotify, so you can imagine what the bottom 50 are like.  Maybe in the future the website will be expanded, but it would require\r\n            a good deal of manual searching...\r\n          </p>\r\n          <h3>\r\n            Can I log out or sign in with a different account?\r\n          </h3>\r\n          <p>\r\n            Sure thing, just go to{' '}\r\n            <a href=\"http://accounts.spotify.com/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n              accounts.spotify.com\r\n            </a>{' '}\r\n            and click \"Log Out\". To sign back in with a different account, click the icon labeled \"Logout\" in the nav bar on the left\r\n            (at the bottom on mobile) to log out and sign in with a different account.\r\n          </p>\r\n          <h3>\r\n            Is this project open source?\r\n          </h3>\r\n          <p>\r\n            Yes it is!  Clicking the GitHub logo below will take you to the repo.\r\n          </p>\r\n          <div className=\"app-help__footer\">\r\n            <a\r\n              className=\"footer__link\"\r\n              href=\"https://github.com/kyleschan/billboardify\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              title=\"Billboardify on Github\"\r\n            >\r\n              <i className=\"ion-social-github\" />\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Apphelp;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nimport {\r\n  startAppView,\r\n  createTracksPlaylist,\r\n  getAppViewData,\r\n  updateDate\r\n} from '../../concepts/app-view';\r\nimport PlaylistPopup from '../PlaylistPopup';\r\nimport TopHistory from '../../components/TopHistory';\r\nimport ScrollTopRoute from '../../components/ScrollTopRoute';\r\nimport AppNavigation from '../../components/AppNavigation';\r\nimport AppHelp from '../../components/AppHelp';\r\n\r\nimport './AppView.css';\r\n\r\nconst trackImg = require('../../assets/images/top-tracks.jpg');\r\n\r\nclass AppView extends Component {\r\n  componentDidMount() {\r\n    this.props.startAppView();\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      topHistory,\r\n      date,\r\n      createTracksPlaylist,\r\n      updateDate,\r\n      match,\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"App-container\">\r\n          <AppNavigation />\r\n\r\n          <PlaylistPopup />\r\n\r\n          <div className=\"App-content\">\r\n            <Route exact path={`${match.url}`} render={() => <Redirect to=\"/top-tracks\" />} />\r\n            <ScrollTopRoute\r\n              exact\r\n              path={`${match.url}top-tracks`}\r\n              render={() => (\r\n                <TopHistory\r\n                  date={date}\r\n                  updateCurrentDate={updateDate}\r\n                  topHistory={topHistory}\r\n                  createTracksPlaylist={createTracksPlaylist}\r\n                />\r\n              )}\r\n            />\r\n            <ScrollTopRoute exact path={`${match.url}app`} component={AppHelp} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"preload-images\">\r\n          <img key={trackImg} alt=\"preloaded img\" src={trackImg} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = getAppViewData;\r\nconst mapDispatchToProps = {\r\n  startAppView,\r\n  createTracksPlaylist,\r\n  updateDate\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AppView);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { authorizeUser } from '../../concepts/auth';\r\nimport changeThemeColor from '../../services/change-theme';\r\nimport ThemeColors from '../../constants/ThemeColors';\r\nimport './LoginView.css';\r\n\r\n\r\nclass LoginView extends Component {\r\n  componentDidMount() {\r\n    changeThemeColor(ThemeColors.DEFAULT);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <span>\r\n        <div className=\"login\">\r\n          <div className=\"login__content\">\r\n            <h1 className=\"login__title\">Save Billboard charts to Spotify!</h1>\r\n            <button className=\"btn btn-primary btn-login\" onClick={this.props.authorizeUser}>\r\n              Sign in with Spotify\r\n            </button>\r\n\r\n            <Link className=\"btn-link\" to=\"app-info\">\r\n              What is this?\r\n            </Link>\r\n          </div>\r\n          <span className=\"login__background\" />\r\n        </div>\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = () => ({});\r\nconst mapDispatchToProps = { authorizeUser };\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(LoginView);\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport config from '../../config';\r\n\r\nimport Modal from '../Modal';\r\nimport './AppInfo.css';\r\n\r\nclass AppInfo extends Component {\r\n  render() {\r\n    const scopes = config.SPOTIFY_AUTH_SCOPES.split(' ');\r\n    return (\r\n      <Modal>\r\n        <div className=\"app-info\">\r\n          <h1>Billboardify App</h1>\r\n          <p>\r\n            This app allows users to both discover and save hits from past weeks of \r\n            the Billboard Top 50.\r\n            It uses the Spotify Web API to save playlists, should you wish to do so.\r\n          </p>\r\n          <h3>Required Spotify access</h3>\r\n          <p>\r\n            Billboardify requires access to your Spotify account to save playlists. It uses the Spotify Implicit Grant Flow\r\n            for user authorization. The app is client-side only, and your Spotify data is\r\n            not stored in any server. For more information on the login procedure, visit this {' '}\r\n            <a href=\"https://developer.spotify.com/documentation/general/guides/authorization-guide/#implicit-grant-flow\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n              guide on the authorization process.\r\n            </a>{' '}\r\n          </p>\r\n          <h3>Used Scopes</h3>\r\n          <p>\r\n            Scopes enable the application to access specific Spotify API endpoints. The set of\r\n            scopes that are required for you to access this app are:\r\n            <ul className=\"scope-list\">{scopes.map(scope => <li>{scope}</li>)}</ul>\r\n          </p>\r\n\r\n          <br />\r\n          <a\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://developer.spotify.com/documentation/general/guides/authorization-guide/\"\r\n          >\r\n            Read more about Spotify scopes\r\n          </a>\r\n          <div className=\"app-info__buttons\">\r\n            <Link className=\"btn btn-secondary\" to=\"/login\">\r\n              OK, got it{' '}\r\n              <span aria-label=\"OK\" role=\"img\">\r\n                👌🏻\r\n              </span>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppInfo;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { saveLogin } from '../../concepts/auth';\r\n\r\nclass Callback extends Component {\r\n  componentDidMount() {\r\n    this.props.saveLogin();\r\n  }\r\n\r\n  render() {\r\n    return <div>Login OK</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = () => ({});\r\nconst mapDispatchToProps = { saveLogin };\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Callback);\r\n","import React, { Component } from 'react';\r\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { ConnectedRouter, routerReducer, routerMiddleware } from 'react-router-redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport * as reducers from '../../reducers';\r\nimport { axiosApiMiddleware } from '../../services/axios';\r\nimport history from '../../services/history';\r\n\r\nimport AppView from '../AppView';\r\nimport LoginView from '../LoginView';\r\nimport AppInfo from '../../components/AppInfo';\r\nimport Callback from '../Callback';\r\n\r\nconst historyMiddleware = routerMiddleware(history);\r\nconst middlewares = [thunk, historyMiddleware, axiosApiMiddleware];\r\n\r\nconst createStoreWithMiddleware = applyMiddleware.apply(this, middlewares)(createStore);\r\nconst reducer = combineReducers({ ...reducers, routing: routerReducer });\r\nconst store = createStoreWithMiddleware(\r\n  reducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__() // eslint-ignore-line\r\n);\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <ConnectedRouter history={history}>\r\n          <Switch>\r\n            <Route exact path=\"/login\" component={LoginView} />\r\n            <Route exact path=\"/app-info\" component={AppInfo} />\r\n            <Route exact path=\"/callback\" component={Callback} />\r\n            <Route path=\"/\" component={AppView} />\r\n          </Switch>\r\n        </ConnectedRouter>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}